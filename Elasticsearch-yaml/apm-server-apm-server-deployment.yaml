apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: apm-server
    release: apm-server
  name: apm-server-apm-server
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: apm-server
      release: apm-server
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        configChecksum: 252d61bd578688721dd71dd22d1b834f39e6485e7e97a1c279ac85e788be7e9
      creationTimestamp: null
      labels:
        app: apm-server
        release: apm-server
    spec:
      containers:
      - image: docker.elastic.co/apm/apm-server:7.16.2
        imagePullPolicy: IfNotPresent
        name: apm-server
        ports:
        - containerPort: 8200
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          privileged: false
          runAsGroup: 0
          runAsNonRoot: true
          runAsUser: 1000
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /usr/share/apm-server/apm-server.yml
          name: apm-server-config
          readOnly: true
          subPath: apm-server.yml
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
        runAsGroup: 0
        runAsUser: 1000
      serviceAccount: apm-server-apm-server
      serviceAccountName: apm-server-apm-server
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 384
          name: apm-server-apm-server-config
        name: apm-server-config
